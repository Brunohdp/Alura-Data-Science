# -*- coding: utf-8 -*-
"""EDA - Gorjetas

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OYu1w0D0XlG3-__MbtziZNbMbp-B_4P1

# Importando Dados e Traduzindo Dados

## Importando Base de Dados
"""

import pandas as pd

dados = pd.read_csv('tips.csv')
dados.head()

"""---

## Traduzindo Colunas e Campos
"""

dados.columns

renomear = {
    'total_bill': 'valor_da_conta', 
    'tip': 'gorjeta',
    'dessert': 'sobremesa',
    'day': 'dia_da_semana',
    'time': 'refeicao',
    'size': 'total_de_pessoas'
}

type(dados)

gorjetas = dados.rename(columns=renomear)
gorjetas.head()

gorjetas.sobremesa.unique()

sim_nao = {
    'No' : 'Não',
    'Yes': 'Sim'
}

gorjetas.sobremesa.map(sim_nao)

gorjetas.head(1)

gorjetas.sobremesa = gorjetas.sobremesa.map(sim_nao)

gorjetas.head(1)

gorjetas.dia_da_semana.unique()

dias = {
        'Sun': 'Domingo',
        'Sat': 'Sabado',
        'Thur': 'Quinta',
        'Fri': 'Sexta'
}

gorjetas.dia_da_semana = gorjetas.dia_da_semana.map(dias)

gorjetas.head(1)

gorjetas.dia_da_semana.unique()

gorjetas.refeicao.unique()

refeicao = {
    'Dinner': 'Jantar',
    'Lunch': 'Almoço'
}

gorjetas.refeicao = gorjetas.refeicao.map(refeicao)

gorjetas.head(5)

"""---
---

# Comparando Distribuições de Maneira Explanatória

## Seaborn e Scatterplot
"""

import seaborn as sns

!pip show seaborn

"""### Análise 1 - Valor da Conta e Gorjeta"""

gorjetas.columns

valor_gorjeta = sns.scatterplot(x = 'valor_da_conta', y = 'gorjeta', data = gorjetas)
valor_gorjeta

"""<font color = gree> **Visualmente o valor da gorjeta aumenta conforme aumenta o valor da conta**"""

print(f'A base de dados contém {gorjetas.shape[0]}')
print(f'Registros não nulos:')
gorjetas.count()

"""---

## Coluna Porcentagem
"""

gorjetas.head(1)

gorjetas['porcentagem'] = (gorjetas.gorjeta / gorjetas.valor_da_conta) * 100

gorjetas.head()

gorjetas.porcentagem = gorjetas.porcentagem.round(2)

gorjetas.head()

porcentagem_conta = sns.scatterplot(x = 'valor_da_conta', y = 'porcentagem', data = gorjetas)

"""<font color = gree> **Visualmente o valor da conta não é proporcional ao valor da gorjeta**

---

## Relplot e Implot
"""

porcentagem_conta_linha = sns.relplot(x = 'valor_da_conta', y = 'porcentagem', kind = 'line', data = gorjetas)

sns.lmplot(x = 'valor_da_conta', y = 'porcentagem', data = gorjetas)

# primeiro_plot.set_title('Análise do valor da gorjeta em função do valor da conta')
# primeiro_plot.set(xlabel='Valor da conta', ylabel='Valor da gorjeta')
# imagem = primeiro_plot.get_figure()
# imagem.savefig('imagem.png')

"""---
---

# Analisando de Forma Visual e Descritiva

## Análise Descritiva
"""

gorjetas.head()

"""### Análise 2 - Sobremesa"""

gorjetas[gorjetas.sobremesa == 'Sim'].describe()

gorjetas[gorjetas.sobremesa == 'Não'].describe()

"""---

## Análise visual
"""

sns.catplot(x = 'sobremesa', y = 'gorjeta', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'gorjeta', hue = 'sobremesa', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'gorjeta', hue = 'sobremesa', col = 'sobremesa', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'gorjeta', col = 'sobremesa', data = gorjetas)

sns.lmplot(x = 'valor_da_conta', y = 'gorjeta', hue='sobremesa', col='sobremesa', data = gorjetas)

sns.lmplot(x = 'valor_da_conta', y = 'porcentagem', hue='sobremesa', col='sobremesa', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'porcentagem', col = 'sobremesa', hue = 'sobremesa', kind = 'line', data = gorjetas)

"""<font color = gree> Visualmente existe uma diferença no valor da gorjeta daqueles que pediram sobremesa e não pediram sobremesa

---

## Teste de Hipótese

**H<sup>null</sup>**

> **A Distribuição da taxa da gorjeta é a mesma nos dois grupos**

**H<sup>alt</sup>**

> **A Distribuição da taxa da gorjeta não é a mesma nos dois grupos**
"""

from scipy.stats import ranksums

sobremesa = gorjetas.query("sobremesa == 'Sim'").porcentagem
sobremesa

sem_sobremesa = gorjetas.query("sobremesa == 'Não'").porcentagem
sem_sobremesa

r = ranksums(sobremesa, sem_sobremesa)

print(f'O valor de p é {r.pvalue}')

"""**H<sup>null</sup>**

> **A Distribuição da taxa da gorjeta é a mesma nos dois grupos**

---
---

# Comparando e Explorando Os Dias Da Semana

## Dias Da Semana
"""

gorjetas.head()

gorjetas.dia_da_semana.unique()

sns.catplot(x = 'dia_da_semana', y = 'valor_da_conta', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'gorjeta', hue = 'dia_da_semana', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'porcentagem', hue = 'dia_da_semana', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'gorjeta', hue = 'dia_da_semana', col = 'dia_da_semana', data = gorjetas)

sns.relplot(x = 'valor_da_conta', y = 'porcentagem', hue = 'dia_da_semana', col = 'dia_da_semana', data = gorjetas)

sns.lmplot(x = 'valor_da_conta', y = 'porcentagem', hue = 'dia_da_semana', col = 'dia_da_semana', data = gorjetas)

"""---

## Análise Descritiva
"""

media_geral_gorjetas = gorjetas.gorjeta.mean()
print(f'A média geral das gorjetas é de {media_geral_gorjetas:.2f}')

gorjetas.groupby(by = 'dia_da_semana').mean()

gorjetas.groupby(by = 'dia_da_semana').mean()[['valor_da_conta', 'gorjeta', 'porcentagem']]

print(f'Frequência dos dias:\n{gorjetas.dia_da_semana.value_counts()}')

"""---

## Teste de Hipótese

**H<sup>null</sup>**

>A distribuição do valor da conta é igual no sábado e no domindo

**H<sup>alt</sup>**

>A distribuição do valor da conta não é igual no sábado e no domindo
"""

valor_conta_domingo = gorjetas.query("dia_da_semana == 'Domingo'").valor_da_conta
valor_conta_domingo

valor_conta_sabado = gorjetas.query("dia_da_semana == 'Sabado'").valor_da_conta
valor_conta_sabado

r2 = ranksums(valor_conta_domingo, valor_conta_sabado)
print(f'O valor de p é {r2.pvalue}')

"""**H<sup>null</sup>**

>A distribuição do valor da conta é igual no sábado e no domindo
"""

